javax.validation.constraints.Null.message=must be empty
javax.validation.constraints.NotNull.message=can't be empty
javax.validation.constraints.Min.message=at least {value}
javax.validation.constraints.DecimalMin.message=at least {value}
javax.validation.constraints.Email.message=invalid e-mail address
javax.validation.constraints.Max.message=max. {value}
javax.validation.constraints.DecimalMax.message=max. {value}
javax.validation.constraints.Size.message=between {min} and {max}
javax.validation.constraints.Digits.message=max. {integer} before and {fraction} after the decimal
javax.validation.constraints.Past.message=must be in the past
javax.validation.constraints.PastOrPresent.message=must be in the past or future
javax.validation.constraints.Future.message=must be in the future
javax.validation.constraints.FutureOrPresent.message=must be in the present or future
javax.validation.constraints.Pattern.message=must follow this regular expression {regexp}
javax.validation.constraints.NotBlank.message=must contain characters that are not blanks
javax.validation.constraints.NotEmpty.message=can't be empty
javax.validation.constraints.Negative.message=must be negative
javax.validation.constraints.NegativeOrZero.message=must be negative or zero
javax.validation.constraints.Positive.message=must be positive
javax.validation.constraints.PositiveOrZero.message=must be positive or zero
org.hibernate.validator.constraints.CreditCardNumber.message=invalid credit card number
org.hibernate.validator.constraints.EAN.message=invalid article number
org.hibernate.validator.constraints.Length.message=min. {min} / max. {max} characters
org.hibernate.validator.constraints.Range.message=must be between {min} and {max}